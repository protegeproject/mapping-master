/* Generated By:JJTree&JavaCC: Do not edit this line. MappingMasterParserConstants.java */
package org.mm.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MappingMasterParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 10;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int CLASS = 13;
  /** RegularExpression Id. */
  int OBJECT_PROPERTY = 14;
  /** RegularExpression Id. */
  int INDIVIDUAL = 15;
  /** RegularExpression Id. */
  int EQUIVALENT_TO = 16;
  /** RegularExpression Id. */
  int SUBCLASS_OF = 17;
  /** RegularExpression Id. */
  int FACTS = 18;
  /** RegularExpression Id. */
  int TYPES = 19;
  /** RegularExpression Id. */
  int ANNOTATIONS = 20;
  /** RegularExpression Id. */
  int SAME_AS = 21;
  /** RegularExpression Id. */
  int DIFFERENT_FROM = 22;
  /** RegularExpression Id. */
  int SOME = 23;
  /** RegularExpression Id. */
  int ONLY = 24;
  /** RegularExpression Id. */
  int VALUE = 25;
  /** RegularExpression Id. */
  int MIN = 26;
  /** RegularExpression Id. */
  int MAX = 27;
  /** RegularExpression Id. */
  int EXACTLY = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int TRUE = 32;
  /** RegularExpression Id. */
  int FALSE = 33;
  /** RegularExpression Id. */
  int XSD_STRING = 34;
  /** RegularExpression Id. */
  int XSD_DECIMAL = 35;
  /** RegularExpression Id. */
  int XSD_BYTE = 36;
  /** RegularExpression Id. */
  int XSD_SHORT = 37;
  /** RegularExpression Id. */
  int XSD_INTEGER = 38;
  /** RegularExpression Id. */
  int XSD_LONG = 39;
  /** RegularExpression Id. */
  int XSD_FLOAT = 40;
  /** RegularExpression Id. */
  int XSD_DOUBLE = 41;
  /** RegularExpression Id. */
  int XSD_BOOLEAN = 42;
  /** RegularExpression Id. */
  int XSD_DATETIME = 43;
  /** RegularExpression Id. */
  int XSD_TIME = 44;
  /** RegularExpression Id. */
  int XSD_DURATION = 45;
  /** RegularExpression Id. */
  int XSD_DATE = 46;
  /** RegularExpression Id. */
  int RDF_XMLLITERAL = 47;
  /** RegularExpression Id. */
  int RDF_PLAINLITERAL = 48;
  /** RegularExpression Id. */
  int MM_LOCATION_WITH_DUPLICATES = 49;
  /** RegularExpression Id. */
  int MM_LOCATION = 50;
  /** RegularExpression Id. */
  int RDF_ID = 51;
  /** RegularExpression Id. */
  int RDFS_LABEL = 52;
  /** RegularExpression Id. */
  int XML_LANG = 53;
  /** RegularExpression Id. */
  int MM_NULL = 54;
  /** RegularExpression Id. */
  int MM_LITERAL = 55;
  /** RegularExpression Id. */
  int MM_DEFAULT_VALUE_ENCODING = 56;
  /** RegularExpression Id. */
  int MM_DEFAULT_IRI_ENCODING = 57;
  /** RegularExpression Id. */
  int MM_DEFAULT_REFERENCE_TYPE = 58;
  /** RegularExpression Id. */
  int MM_DEFAULT_PROPERTY_TYPE = 59;
  /** RegularExpression Id. */
  int MM_DEFAULT_PROPERTY_VALUE_TYPE = 60;
  /** RegularExpression Id. */
  int MM_DEFAULT_DATA_PROPERTY_VALUE_TYPE = 61;
  /** RegularExpression Id. */
  int MM_DEFAULT_ANNOTATION_PROPERTY_VALUE_TYPE = 62;
  /** RegularExpression Id. */
  int MM_DEFAULT_SHIFT = 63;
  /** RegularExpression Id. */
  int MM_DEFAULT_EMPTY_LITERAL = 64;
  /** RegularExpression Id. */
  int MM_DEFAULT_EMPTY_LOCATION = 65;
  /** RegularExpression Id. */
  int MM_DEFAULT_EMPTY_RDF_ID = 66;
  /** RegularExpression Id. */
  int MM_DEFAULT_EMPTY_RDFS_LABEL = 67;
  /** RegularExpression Id. */
  int MM_DEFAULT_IF_OWL_ENTITY_EXISTS = 68;
  /** RegularExpression Id. */
  int MM_DEFAULT_IF_OWL_ENTITY_DOES_NOT_EXIST = 69;
  /** RegularExpression Id. */
  int MM_UNTYPED = 70;
  /** RegularExpression Id. */
  int MM_PREFIX = 71;
  /** RegularExpression Id. */
  int MM_NAMESPACE = 72;
  /** RegularExpression Id. */
  int CELL_WILDCARD = 73;
  /** RegularExpression Id. */
  int RDFS_CLASS = 74;
  /** RegularExpression Id. */
  int RDF_PROPERTY = 75;
  /** RegularExpression Id. */
  int OWL_CLASS = 76;
  /** RegularExpression Id. */
  int OWL_NAMED_INDIVIDUAL = 77;
  /** RegularExpression Id. */
  int OWL_OBJECT_PROPERTY = 78;
  /** RegularExpression Id. */
  int OWL_DATA_PROPERTY = 79;
  /** RegularExpression Id. */
  int OWL_ANNOTATION_PROPERTY = 80;
  /** RegularExpression Id. */
  int OWL_DATATYPE = 81;
  /** RegularExpression Id. */
  int OWL_IRI = 82;
  /** RegularExpression Id. */
  int MM_IRI = 83;
  /** RegularExpression Id. */
  int MM_ENTITY_IRI = 84;
  /** RegularExpression Id. */
  int MM_TO_UPPER_CASE = 85;
  /** RegularExpression Id. */
  int MM_TO_LOWER_CASE = 86;
  /** RegularExpression Id. */
  int MM_TRIM = 87;
  /** RegularExpression Id. */
  int MM_PRINTF = 88;
  /** RegularExpression Id. */
  int MM_DECIMAL_FORMAT = 89;
  /** RegularExpression Id. */
  int MM_CAPTURING = 90;
  /** RegularExpression Id. */
  int MM_REVERSE = 91;
  /** RegularExpression Id. */
  int MM_REPLACE = 92;
  /** RegularExpression Id. */
  int MM_REPLACE_ALL = 93;
  /** RegularExpression Id. */
  int MM_REPLACE_FIRST = 94;
  /** RegularExpression Id. */
  int MM_APPEND = 95;
  /** RegularExpression Id. */
  int MM_PREPEND = 96;
  /** RegularExpression Id. */
  int MM_NO_ENCODE = 97;
  /** RegularExpression Id. */
  int MM_CAMELCASE_ENCODE = 98;
  /** RegularExpression Id. */
  int MM_SNAKECASE_ENCODE = 99;
  /** RegularExpression Id. */
  int MM_UUID_ENCODE = 100;
  /** RegularExpression Id. */
  int MM_HASH_ENCODE = 101;
  /** RegularExpression Id. */
  int MM_DEFAULT_LOCATION_VALUE = 102;
  /** RegularExpression Id. */
  int MM_DEFAULT_LITERAL = 103;
  /** RegularExpression Id. */
  int MM_DEFAULT_ID = 104;
  /** RegularExpression Id. */
  int MM_DEFAULT_LABEL = 105;
  /** RegularExpression Id. */
  int MM_DEFAULT_PREFIX = 106;
  /** RegularExpression Id. */
  int MM_DEFAULT_NAMESPACE = 107;
  /** RegularExpression Id. */
  int MM_DEFAULT_LANGUAGE = 108;
  /** RegularExpression Id. */
  int MM_NO_SHIFT = 109;
  /** RegularExpression Id. */
  int MM_SHIFT_UP = 110;
  /** RegularExpression Id. */
  int MM_SHIFT_DOWN = 111;
  /** RegularExpression Id. */
  int MM_SHIFT_LEFT = 112;
  /** RegularExpression Id. */
  int MM_SHIFT_RIGHT = 113;
  /** RegularExpression Id. */
  int MM_ERROR_IF_EMPTY_LOCATION = 114;
  /** RegularExpression Id. */
  int MM_WARNING_IF_EMPTY_LOCATION = 115;
  /** RegularExpression Id. */
  int MM_SKIP_IF_EMPTY_LOCATION = 116;
  /** RegularExpression Id. */
  int MM_PROCESS_IF_EMPTY_LOCATION = 117;
  /** RegularExpression Id. */
  int MM_PROCESS_IF_EMPTY_LITERAL = 118;
  /** RegularExpression Id. */
  int MM_ERROR_IF_EMPTY_LITERAL = 119;
  /** RegularExpression Id. */
  int MM_WARNING_IF_EMPTY_LITERAL = 120;
  /** RegularExpression Id. */
  int MM_SKIP_IF_EMPTY_LITERAL = 121;
  /** RegularExpression Id. */
  int MM_PROCESS_IF_EMPTY_ID = 122;
  /** RegularExpression Id. */
  int MM_ERROR_IF_EMPTY_ID = 123;
  /** RegularExpression Id. */
  int MM_WARNING_IF_EMPTY_ID = 124;
  /** RegularExpression Id. */
  int MM_SKIP_IF_EMPTY_ID = 125;
  /** RegularExpression Id. */
  int MM_PROCESS_IF_EMPTY_LABEL = 126;
  /** RegularExpression Id. */
  int MM_ERROR_IF_EMPTY_LABEL = 127;
  /** RegularExpression Id. */
  int MM_WARNING_IF_EMPTY_LABEL = 128;
  /** RegularExpression Id. */
  int MM_SKIP_IF_EMPTY_LABEL = 129;
  /** RegularExpression Id. */
  int MM_RESOLVE_IF_OWL_ENTITY_EXISTS = 130;
  /** RegularExpression Id. */
  int MM_SKIP_IF_OWL_ENTITY_EXISTS = 131;
  /** RegularExpression Id. */
  int MM_WARNING_IF_OWL_ENTITY_EXISTS = 132;
  /** RegularExpression Id. */
  int MM_ERROR_IF_OWL_ENTITY_EXISTS = 133;
  /** RegularExpression Id. */
  int MM_CREATE_IF_OWL_ENTITY_DOES_NOT_EXIST = 134;
  /** RegularExpression Id. */
  int MM_SKIP_IF_OWL_ENTITY_DOES_NOT_EXIST = 135;
  /** RegularExpression Id. */
  int MM_WARNING_IF_OWL_ENTITY_DOES_NOT_EXIST = 136;
  /** RegularExpression Id. */
  int MM_ERROR_IF_OWL_ENTITY_DOES_NOT_EXIST = 137;
  /** RegularExpression Id. */
  int STRING_LITERAL = 138;
  /** RegularExpression Id. */
  int QUOTED_NAME_LITERAL = 139;
  /** RegularExpression Id. */
  int IDENTIFIER = 140;
  /** RegularExpression Id. */
  int IRI_REF = 141;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 142;
  /** RegularExpression Id. */
  int LONG_LITERAL = 143;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 144;
  /** RegularExpression Id. */
  int LETTER = 145;
  /** RegularExpression Id. */
  int DIGIT = 146;
  /** RegularExpression Id. */
  int EXPONENT = 147;
  /** RegularExpression Id. */
  int LOCATION_SPECIFICATION = 148;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "<CLASS>",
    "<OBJECT_PROPERTY>",
    "<INDIVIDUAL>",
    "<EQUIVALENT_TO>",
    "<SUBCLASS_OF>",
    "<FACTS>",
    "<TYPES>",
    "<ANNOTATIONS>",
    "<SAME_AS>",
    "<DIFFERENT_FROM>",
    "<SOME>",
    "<ONLY>",
    "<VALUE>",
    "<MIN>",
    "<MAX>",
    "<EXACTLY>",
    "<AND>",
    "<OR>",
    "<NOT>",
    "<TRUE>",
    "<FALSE>",
    "\"xsd:string\"",
    "\"xsd:decimal\"",
    "\"xsd:byte\"",
    "\"xsd:short\"",
    "\"xsd:integer\"",
    "\"xsd:long\"",
    "\"xsd:float\"",
    "\"xsd:double\"",
    "\"xsd:boolean\"",
    "\"xsd:dateTime\"",
    "\"xsd:time\"",
    "\"xsd:duration\"",
    "\"xsd:date\"",
    "\"rdf:XMLLiteral\"",
    "\"rdf:PlainLiteral\"",
    "\"mm:LocationWithDuplicates\"",
    "\"mm:Location\"",
    "\"rdf:ID\"",
    "\"rdfs:label\"",
    "\"xml:lang\"",
    "\"mm:null\"",
    "\"mm:Literal\"",
    "\"mm:DefaultValueEncoding\"",
    "\"mm:DefaultIRIEncoding\"",
    "\"mm:DefaultReferenceType\"",
    "\"mm:DefaultPropertyType\"",
    "\"mm:DefaultPropertyValueType\"",
    "\"mm:DefaultDataPropertyValueType\"",
    "\"mm:DefaultAnnotationPropertyValueType\"",
    "\"mm:DefaultShift\"",
    "\"mm:DefaultEmptyLiteral\"",
    "\"mm:DefaultEmptyLocation\"",
    "\"mm:DefaultEmptyID\"",
    "\"mm:DefaultEmptyLabel\"",
    "\"mm:DefaultIfOWLEntityExists\"",
    "\"mm:DefaultIfOWLEntityDoesNotExist\"",
    "\"mm:Untyped\"",
    "\"mm:Prefix\"",
    "\"mm:Namespace\"",
    "\"*\"",
    "\"rdfs:class\"",
    "\"rdf:property\"",
    "\"Class\"",
    "\"Individual\"",
    "\"ObjectProperty\"",
    "\"DataProperty\"",
    "\"AnnotationProperty\"",
    "\"Datatype\"",
    "\"IRI\"",
    "\"mm:IRI\"",
    "\"mm:entityIRI\"",
    "\"mm:toUpperCase\"",
    "\"mm:toLowerCase\"",
    "\"mm:trim\"",
    "\"mm:printf\"",
    "\"mm:decimalFormat\"",
    "\"mm:capturing\"",
    "\"mm:reverse\"",
    "\"mm:replace\"",
    "\"mm:replaceAll\"",
    "\"mm:replaceFirst\"",
    "\"mm:append\"",
    "\"mm:prepend\"",
    "\"mm:noEncode\"",
    "\"mm:camelCaseEncode\"",
    "\"mm:snakeCaseEncode\"",
    "\"mm:uuidEncode\"",
    "\"mm:hashEncode\"",
    "\"mm:DefaultLocationValue\"",
    "\"mm:DefaultLiteral\"",
    "\"mm:DefaultID\"",
    "\"mm:DefaultLabel\"",
    "\"mm:DefaultPrefix\"",
    "\"mm:DefaultNamespace\"",
    "\"mm:DefaultLanguage\"",
    "\"mm:NoShift\"",
    "\"mm:ShiftUp\"",
    "\"mm:ShiftDown\"",
    "\"mm:ShiftLeft\"",
    "\"mm:ShiftRight\"",
    "\"mm:ErrorIfEmptyLocation\"",
    "\"mm:WarningIfEmptyLocation\"",
    "\"mm:SkipIfEmptyLocation\"",
    "\"mm:ProcessIfEmptyLocation\"",
    "\"mm:ProcessIfEmptyLiteral\"",
    "\"mm:ErrorIfEmptyLiteral\"",
    "\"mm:WarningIfEmptyLiteral\"",
    "\"mm:SkipIfEmptyLiteral\"",
    "\"mm:ProcessIfEmptyID\"",
    "\"mm:ErrorIfEmptyID\"",
    "\"mm:WarningIfEmptyID\"",
    "\"mm:SkipIfEmptyID\"",
    "\"mm:ProcessIfEmptyLabel\"",
    "\"mm:ErrorIfEmptyLabel\"",
    "\"mm:WarningIfEmptyLabel\"",
    "\"mm:SkipIfEmptyLabel\"",
    "\"mm:ResolveIfOWLEntityExists\"",
    "\"mm:SkipIfOWLEntityExists\"",
    "\"mm:WarningIfOWLEntityExists\"",
    "\"mm:ErrorIfOWLEntityExists\"",
    "\"mm:CreateIfOWLEntityDoesNotExist\"",
    "\"mm:SkipIfOWLEntityDoesNotExist\"",
    "\"mm:WarningIfOWLEntityDoesNotExist\"",
    "\"mm:ErrorIfOWLEntityDoesNotExist\"",
    "<STRING_LITERAL>",
    "<QUOTED_NAME_LITERAL>",
    "<IDENTIFIER>",
    "<IRI_REF>",
    "<INTEGER_LITERAL>",
    "<LONG_LITERAL>",
    "<FLOAT_LITERAL>",
    "<LETTER>",
    "<DIGIT>",
    "<EXPONENT>",
    "<LOCATION_SPECIFICATION>",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"!\"",
    "\"@\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
  };

}
